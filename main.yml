name: Deploy PHP App on ECR and ECS Fargate

on:
  push:
    branches:
      - main

jobs:
  create-docker-image:
    name: Build Image - Crear imagen Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configurar Credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Iniciar sesi√≥n en AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Crear, etiquetar y enviar imagen a AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hausloop
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy Image to ECS Fargate
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: Configurar Credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Actualizar Servicio en ECS Fargate
        run: |
          aws ecs update-service \
            --cluster hausloop-back \
            --service hausloop-service \
            --force-new-deployment

      - name: Actualizar Task Definition en ECS
        run: |
          aws ecs register-task-definition \
            --family hausloop-push-tasks \
            --container-definitions "[
              {
                \"name\": \"hausloop-container\",
                \"image\": \"${{ steps.login-ecr.outputs.registry }}/hausloop:latest\",
                \"essential\": true,
                \"memory\": 512,
                \"cpu\": 256,
                \"portMappings\": [
                  {
                    \"containerPort\": 80,
                    \"hostPort\": 80
                  }
                ]
              }
            ]"

